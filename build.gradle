plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.training'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '13'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt:0.5'
	compile 'org.springframework.boot:spring-boot-starter-security'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
   		exclude group: "junit", module: "junit"
	}
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
   systemProperty 'spring.profiles.active', 'test'
   useJUnitPlatform()
   reports {
      junitXml.enabled = true
      html.enabled = false
   }
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
